name: Terraform Init, Validate, & Plan Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-init-plan-eks-cluster:
    name: Init and Plan Terraform eks_cluster_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Plan Terraform eks_cluster_management
        run: |
          cd eks_cluster_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform validate
          terraform plan -out=eks_cluster_management.tfplan -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars

      - name: Upload Terraform plan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: eks-cluster-terraform-plan
          path: eks_cluster_management/terraform/eks_cluster_management.tfplan

  terraform-init-plan-eks-addon-management:
    name: Init and Plan Terraform eks_addon_management
    runs-on: ubuntu-latest
    needs: terraform-init-plan-eks-cluster
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Terraform plan artifact from eks_cluster_management
        uses: actions/download-artifact@v2
        with:
          name: eks-cluster-terraform-plan
          path: eks_addon_management/terraform/

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Plan Terraform eks_addon_management
        run: |
          cd eks_addon_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform validate
          terraform plan -out=eks_addon_management.tfplan -var-file=${{ env.VAR_FILE }}

      - name: Upload Terraform plan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: eks-addon-terraform-plan
          path: eks_addon_management/terraform/eks_addon_management.tfplan

  terraform-init-plan-eks-launch-template:
    name: Init and Plan Terraform eks_launch_template_management
    runs-on: ubuntu-latest
    needs: terraform-init-plan-eks-addon-management
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Terraform plan artifacts
        uses: actions/download-artifact@v2
        with:
          name: eks-cluster-terraform-plan
          path: eks_launch_template_management/terraform/
      - name: Download Terraform plan artifacts
        uses: actions/download-artifact@v2
        with:
          name: eks-addon-terraform-plan
          path: eks_launch_template_management/terraform/

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Plan Terraform eks_launch_template_management
        run: |
          cd eks_launch_template_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform validate
          terraform plan -out=eks_launch_template_management.tfplan -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars

      - name: Upload Terraform plan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: eks-launch-template-terraform-plan
          path: eks_launch_template_management/terraform/eks_launch_template_management.tfplan

  terraform-init-plan-eks-managed-node-group:
    name: Init and Plan Terraform eks_managed_node_group_management
    runs-on: ubuntu-latest
    needs: terraform-init-plan-eks-launch-template
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Terraform plan artifacts
        uses: actions/download-artifact@v2
        with:
          name: eks-cluster-terraform-plan
          path: eks_managed_node_group_management/terraform/
      - name: Download Terraform plan artifacts
        uses: actions/download-artifact@v2
        with:
          name: eks-addon-terraform-plan
          path: eks_managed_node_group_management/terraform/
      - name: Download Terraform plan artifacts
        uses: actions/download-artifact@v2
        with:
          name: eks-launch-template-terraform-plan
          path: eks_managed_node_group_management/terraform/

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Plan Terraform eks_managed_node_group_management
        run: |
          cd eks_managed_node_group_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform validate
          terraform plan -out=eks_managed_node_group_management.tfplan -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars

      - name: Upload Terraform plan as artifact
        uses: actions/upload-artifact@v2
        with:
          name: eks-managed-node-group-terraform-plan
          path: eks_managed_node_group_management/terraform/eks_managed_node_group_management.tfplan