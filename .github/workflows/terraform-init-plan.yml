name: Terraform Init, Validate, & Plan Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-init-plan-eks-launch-template:
    name: Init and Plan Terraform eks_launch_template_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Init and Plan Terraform eks_launch_template_management
        run: |
          cd eks_launch_template_management/terraform
          terraform init
          terraform validate
          terraform plan -var-file=${{ env.VAR_FILE }} -var-file=global.tfvars

  terraform-init-plan-eks-cluster:
    name: Init and Plan Terraform eks_cluster_management
    runs-on: ubuntu-latest
    needs: terraform-init-plan-eks-launch-template
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Init and Plan Terraform eks_cluster_management
        run: |
          cd eks_cluster_management/terraform
          terraform init
          terraform validate
          terraform plan -var-file=${{ env.VAR_FILE }} -var-file=global.tfvars

  terraform-init-plan-eks-managed-node-group:
    name: Init and Plan Terraform eks_managed_node_group_management
    runs-on: ubuntu-latest
    needs: terraform-init-plan-eks-cluster
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' || 'development' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' || '../variables/development.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Init and Plan Terraform eks_managed_node_group_management
        run: |
          cd eks_managed_node_group_management/terraform
          terraform init
          terraform validate
          terraform plan -var-file=${{ env.VAR_FILE }} -var-file=global.tfvars
