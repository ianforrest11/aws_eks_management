name: Terraform Destroy Workflow

on:
  workflow_dispatch:  # Allow manual trigger

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-destroy-eks-addon-management:
    name: Destroy Terraform eks_addon_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Destroy Terraform eks_addon_management
        run: |
          cd eks_addon_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }}

  # terraform-destroy-eks-managed-node-group:
  #   name: Destroy Terraform eks_managed_node_group_management
  #   runs-on: ubuntu-latest
  #   needs: terraform-destroy-eks-addon-management
  #   env:
  #     ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' }}
  #     VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Configure SSH
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #       run: |
  #         mkdir -p ~/.ssh/
  #         echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan github.com >> ~/.ssh/known_hosts
  #         chmod 644 ~/.ssh/known_hosts
      
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1.7.0
  #       with:
  #         role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
  #         role-session-name: GitHub_to_AWS_via_FederatedOIDC
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Destroy Terraform eks_managed_node_group_management
  #       run: |
  #         cd eks_managed_node_group_management/terraform
  #         sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
  #         terraform init
  #         terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }}

  terraform-destroy-eks-launch-template:
    name: Destroy Terraform eks_launch_template_management
    runs-on: ubuntu-latest
    needs: terraform-destroy-eks-addon-management
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Destroy Terraform eks_launch_template_management
        run: |
          cd eks_launch_template_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars

  terraform-destroy-eks-cluster:
    name: Destroy Terraform eks_cluster_management
    runs-on: ubuntu-latest
    needs: terraform-destroy-eks-addon-management
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production' }}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Destroy Terraform eks_cluster_management
        run: |
          cd eks_cluster_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars
